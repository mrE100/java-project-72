plugins {
    id 'java'
    id 'checkstyle'
    id 'jacoco'
    id 'application'
    id('io.ebean') version '13.18.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    options.release = 20
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'hexlet.code.App'
}

sourceSets.main.java.srcDirs = ['src/main/java', 'build/generated/sources/annotationProcessor/java/main']

dependencies {

    implementation 'io.javalin:javalin:5.6.1'
    implementation 'io.javalin:javalin-rendering:5.6.0'
    implementation 'org.slf4j:slf4j-simple:2.0.5'
    implementation 'com.konghq:unirest-java:3.14.2'

    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.1'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.3.0'

    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.postgresql:postgresql:42.5.4'

    implementation 'io.ebean:ebean:13.18.0'
    implementation 'io.ebean:ebean-ddl-generator:13.20.1'
    implementation 'io.ebean:ebean-querybean:13.20.1'
    implementation 'io.ebean:ebean-migration:13.9.0'
    implementation 'io.ebean:ebean-annotation:8.4'
    annotationProcessor 'io.ebean:querybean-generator:13.20.1'
    implementation 'org.jsoup:jsoup:1.16.1'

    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.5'
    implementation 'javax.activation:activation:1.1.1'

    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'io.ebean:ebean-test:13.15.0-jakarta'
    testImplementation 'com.konghq:unirest-java:3.14.2'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.11.0")
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

ebean {
    debugLevel = 1
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

checkstyle {
    toolVersion '10.12.1'
}

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean
